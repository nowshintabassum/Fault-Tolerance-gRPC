plugins {
    id 'java'                              // The Java plugin adds standard tasks like clean and build.
    id 'application'
    id 'com.google.protobuf' version '0.8.18'
}

group 'com.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

// Specify the fully qualified name of the main class.
application {
    mainClass = 'raft.RaftLogReplicationServer'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.grpc:grpc-netty-shaded:1.49.1'
    implementation 'io.grpc:grpc-protobuf:1.49.1'
    implementation 'io.grpc:grpc-stub:1.49.1'
    // Add the protobuf runtime dependency.
    implementation 'com.google.protobuf:protobuf-java:3.21.12'
    // Add the annotation API dependency.
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation 'junit:junit:4.13.2'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.12"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.49.1'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc { }
            }
        }
    }
}


task runClient(type: JavaExec) {
    main = 'raft.RaftClient'
    classpath = sourceSets.main.runtimeClasspath
    // Set a default argument (you can override this on the command line).
    args '50051'
}
