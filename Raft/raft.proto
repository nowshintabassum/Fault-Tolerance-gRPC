syntax = "proto3";

option java_package = "raft";
option java_multiple_files = true;

package raft;

service Raft {
  // RPC used during leader election
  rpc RequestVote(VoteRequest) returns (VoteResponse);
  // RPC used both as heartbeat and for log replication
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
  // RPC used by clients to submit an operation/command
  rpc SubmitOperation(OperationRequest) returns (OperationResponse);

  rpc HandoffLeader (ChangedLeader) returns (ChangedLeaderAck);
}

message VoteRequest {
  int32 term = 1;
  string candidateId = 2;
}

message VoteResponse {
  int32 term = 1;
  bool voteGranted = 2;
}

message LogEntry {
  string operation = 1;
  int32 term = 2;
  int32 index = 3;
}

message AppendEntriesRequest {
  int32 term = 1;
  string leaderId = 2;
  // The full log list from the leader
  repeated LogEntry log = 3;
  // c: index of the most recently committed operation
  int32 commitIndex = 4;
}

message AppendEntriesResponse {
  int32 term = 1;
  bool success = 2;
}

message OperationRequest {
  string operation = 1;
}

message OperationResponse {
  string result = 1;
}

message ChangedLeader {
  string newleader = 1;
}

message ChangedLeaderAck{
  bool ack = 1;
}